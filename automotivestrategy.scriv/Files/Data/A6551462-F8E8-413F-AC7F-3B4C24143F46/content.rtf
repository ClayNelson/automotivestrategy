{\rtf1\ansi\ansicpg1252\cocoartf2638
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\froman\fcharset0 Palatino-Roman;\f1\fswiss\fcharset0 Helvetica;\f2\fswiss\fcharset0 Helvetica-Oblique;
}
{\colortbl;\red255\green255\blue255;\red38\green38\blue38;\red255\green255\blue255;}
{\*\expandedcolortbl;;\cssrgb\c20000\c20000\c20000;\cssrgb\c100000\c100000\c100000;}
\pard\tx360\tx720\tx1080\tx1440\tx1800\tx2160\tx2880\tx3600\tx4320\fi360\sl264\slmult1\pardirnatural\partightenfactor0
{\field{\*\fldinst{HYPERLINK "https://ieeexplore.ieee.org/document/9425826"}}{\fldrslt 
\f0\fs26 \cf0 https://ieeexplore.ieee.org/document/9425826}}
\f0\fs26 \
\pard\pardeftab720\partightenfactor0

\f1\fs36 \cf2 \cb3 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 \
\
\pard\pardeftab720\partightenfactor0

\fs27\fsmilli13600 \cf2 \cb3 \strokec2 A. Zeeb, "AUTOSAR Classic Platform Flexibility Managing the complexity of distributed embedded software development : Invited Talk,"\'a0
\f2\i 2021 IEEE 18th International Conference on Software Architecture Companion (ICSA-C)
\f1\i0 , 2021, pp. 167-167, doi: 10.1109/ICSA-C52384.2021.00040.\

\fs36 \cf2 \cb3 \strokec2 \
\pard\pardeftab720\partightenfactor0
\cf2 AUTOSAR Classic Platform is a well-established industry standard for model-based and layered software development in the automotive industry. Formally defined interfaces between the individual software components simplify independent development- and testing. However, the nowadays readily available multi-core microcontrollers allow for increasingly larger and more complex application software. It makes sense to have parts of it developed by partner companies or subcontractors, which are specialized on a specific matter or algorithm. Such a distributed development over several company-internal teams or even companies is hard to achieve. This is mainly because of the inherently static configuration of AUTOSAR Classic Platform, which requires a precise definition of a software component's provided and required data and services. Furthermore, the ECU integrator needs to create a binary of the overall embedded software, a process which is quite sensitive to accidentally brought in incompatibilities in data- and services exchanged respectively used between the software components. Classic Platform Flexibility addresses these challenges and, on top, offers further use cases for the distributed software development. The main changes it brings are enhanced flexibility during development and stronger formalization regarding data and services produced- and consumed by the application components. This is achieved by adding another granularity-layer to the AUTOSAR Classic model: The Software Cluster. Software Clusters are intended to contain one or several software components, the middleware for data exchange and service invocation and, depending on the role of a Cluster, also parts of the AUTOSAR Basic Software, which provides the various services and handles ECU-external communication via the fieldbuses. Software Clusters are self-contained parts of the overall embedded software and can be built independently. This changes integration of the overall embedded software of an ECU from a classical build process to simply programming of the Software Clusters in their binary form to the ECU and establishing the connections of their interfaces with a so-called Connector tool.}