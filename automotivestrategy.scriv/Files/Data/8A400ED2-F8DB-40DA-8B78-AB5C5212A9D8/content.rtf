{\rtf1\ansi\ansicpg1252\cocoartf2638
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\froman\fcharset0 Palatino-Roman;\f1\fswiss\fcharset0 Helvetica;\f2\fswiss\fcharset0 Helvetica-Oblique;
}
{\colortbl;\red255\green255\blue255;\red38\green38\blue38;\red255\green255\blue255;}
{\*\expandedcolortbl;;\cssrgb\c20000\c20000\c20000;\cssrgb\c100000\c100000\c100000;}
\pard\tx360\tx720\tx1080\tx1440\tx1800\tx2160\tx2880\tx3600\tx4320\fi360\sl264\slmult1\pardirnatural\partightenfactor0

\f0\fs26 \cf0 https://ieeexplore.ieee.org/document/8432200\
\
\pard\pardeftab720\partightenfactor0

\f1\fs27\fsmilli13600 \cf2 \cb3 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 J. Mills, R. Turin, J. Mangas and S. Ranville, "Innovation Welcome: An Agile Approach to Model-Based Development of Safety-Critical Embedded Systems,"\'a0
\f2\i 2018 IEEE International Conference on Software Architecture Companion (ICSA-C)
\f1\i0 , 2018, pp. 152-152, doi: 10.1109/ICSA-C.2018.00045.\
\pard\pardeftab720\partightenfactor0

\f0\fs26 \cf0 \cb1 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 \
\pard\tx360\tx720\tx1080\tx1440\tx1800\tx2160\tx2880\tx3600\tx4320\fi360\sl264\slmult1\pardirnatural\partightenfactor0
\cf0 \
\pard\pardeftab720\partightenfactor0

\f1\fs36 \cf2 \cb3 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 From concept to production, intelligent tools are needed to pave the way for stress-free development of complex automotive embedded systems. While automotive products depend more and more on software as the distinguishing feature to achieve a competitive edge, the addition of software features to the overall system functionality comes at a hefty price. As the development times become shorter and shorter, the simultaneous increase in complexity demands diligent partitioning of the software development tasks and ultimately the collaboration of many multi-disciplinary development teams that work in parallel. This leads to a multitude of independently developed software artifacts, each of which will eventually be required to seamlessly integrate into the overall system architecture. Of course, such a seamless integration can ultimately only be achieved if the artifact development follows a very disciplined, if not rigid, development process. However, the more the process is policed, the more the feature engineers will be required to follow procedure and the less they will be able to exploit their creative potential. This is a conundrum that is hard to solve. Rigid development rules are necessary to ensure functional safety, artifact integrity, and consistency throughout the development process. On the other hand, agile development that facilitates product innovation on a functional level is necessary to gain a competitive edge. The two objectives, if viewed within the context of a traditional software development process, are competing objectives and one typically has to be content with a compromise. But what if there is a way to achieve both objectives simultaneously? What if there is a way to delegate the policing to a suite of intelligent development tools that shelter each feature developer when unleashing his/her creative potential? This presentation describes a new, agile, architecture-centric software development paradigm and a companion tool framework that facil...\cf2 \cb1 \strokec2 \
}